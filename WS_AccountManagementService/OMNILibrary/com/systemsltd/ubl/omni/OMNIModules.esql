BROKER SCHEMA com.systemsltd.ubl.omni


CREATE PROCEDURE SP_GET_ACCOUNT_DETAILS
( 
	IN P_SEC_CHANNEL CHARACTER,
	IN P_SEC_PASSWORD CHARACTER,
	IN P_ACCOUNT_NO CHARACTER,
	IN P_CHANNEL_CODE CHARACTER,
	IN P_AMOUNT DECIMAL,
	OUT P_ACCOUNT_TITLE CHARACTER,
	OUT P_RET_VALUE CHARACTER,
	OUT P_IBAN CHARACTER 
)
LANGUAGE DATABASE 
EXTERNAL NAME "%.SOA_INTERFACE.SP_GET_ACCOUNT_DETAILS";

CREATE PROCEDURE SP_FUNDTRANSFER
( 
	IN P_SEC_CHANNEL CHARACTER,
	IN P_SEC_PASSWORD CHARACTER,
	IN P_GUID CHARACTER,
	IN P_FROM_ACCOUNT CHARACTER,
	IN P_FROM_BRANCH_CODE CHARACTER,
	IN P_TO_ACCOUNT CHARACTER,
	IN P_TO_BRANCH_CODE CHARACTER,
	IN P_AMOUNT FLOAT, 
	IN P_FEE_AMOUNT FLOAT, 
	IN P_FEE_FROM_ACCT_ID DECIMAL, 
	IN P_FEE_TO_ACCT_ID DECIMAL, 
	IN P_FED_AMOUNT DECIMAL, 
	IN P_FED_FROM_ACCT_ID DECIMAL, 
	IN P_FED_TO_ACCT_ID DECIMAL, 
	IN P_WHT_FROM_ACCT_ID DECIMAL, 
	IN P_TXN_TYPE_NAME CHARACTER,
	IN P_CHANNEL_CODE CHARACTER,
	IN P_NARRATION CHARACTER,
	IN P_OVERRIDE_LIMITS CHARACTER,
	IN P_CREATED_BY CHARACTER,
	IN P_UPDATED_BY CHARACTER,
	IN P_COMMIT CHARACTER,
	IN P_EXISTIN_G_TXN_ID DECIMAL,
	IN P_AGENT_ID CHARACTER,
	OUT P_TXN_ID DECIMAL,
	OUT P_COMMIT DECIMAL,
	OUT P_RET_VALUE CHARACTER  
)
LANGUAGE DATABASE 
EXTERNAL NAME "%.SOA_INTERFACE.SP_FUNDTRANSFER";

CREATE PROCEDURE SP_FUNDTRANSFER_REVERSAL
( 
	IN P_SEC_CHANNEL CHARACTER,
	IN P_SEC_PASSWORD CHARACTER,
	IN P_ORIGINAL_GUID CHARACTER,
	IN P_NEW_GUID CHARACTER,
	IN P_CHANNEL_CODE CHARACTER,
	IN P_COMMIT CHARACTER,
	OUT P_TXN_ID DECIMAL,
	OUT P_RET_VALUE CHARACTER
)
LANGUAGE DATABASE 
EXTERNAL NAME "%.SOA_INTERFACE.SP_FUNDTRANSFER_REVERSAL";

CREATE PROCEDURE SP_GET_ACCOUNT_BALANCE
( 
	IN P_SEC_CHANNEL CHARACTER,
	IN P_SEC_PASSWORD CHARACTER,
	IN P_ACCOUNT_NO CHARACTER,
	IN P_CHANNEL_CODE CHARACTER,
	OUT P_BALANCE DECIMAL,
	OUT P_RET_VALUE CHARACTER
)
LANGUAGE DATABASE 
EXTERNAL NAME "%.SOA_INTERFACE.SP_GET_ACCOUNT_BALANCE";

CREATE PROCEDURE SP_GET_OMNI_ACCOUNT_STATEMENT
( 
	IN P_SEC_CHANNEL CHARACTER,
	IN P_SEC_PASSWORD CHARACTER,
	IN MOBILE_NUMBER CHARACTER,
	IN START_DATE DATE,
	IN END_DATE DATE,
        IN P_TRANSACTION_TYPE CHARACTER,
        IN P_NoTransaction INTEGER
)
LANGUAGE DATABASE DYNAMIC RESULT SETS 1 
EXTERNAL NAME "%.SOA_INTERFACE.SP_GET_OMNI_ACCOUNT_STATEMENT";

CREATE PROCEDURE SP_GET_LOV
( 
	IN P_SEC_CHANNEL CHARACTER,
	IN P_SEC_PASSWORD CHARACTER,
	IN P_LOV_TYPE CHARACTER,
	OUT P_RET_VALUE CHARACTER
)
LANGUAGE DATABASE DYNAMIC RESULT SETS 1 
EXTERNAL NAME "%.SOA_INTERFACE.SP_GET_LOV";

CREATE PROCEDURE SP_GET_CUSTOMER_ACCOUNT_DETAIL
( 
	IN P_SEC_CHANNEL CHARACTER,
	IN P_SEC_PASSWORD CHARACTER,
	IN P_MOBILE_NO CHARACTER,
	IN P_CHANNEL_CODE CHARACTER
)
LANGUAGE DATABASE DYNAMIC RESULT SETS 1 
EXTERNAL NAME "%.SOA_INTERFACE.SP_GET_CUSTOMER_ACCOUNT_DETAIL";



CREATE PROCEDURE getOMNIMappedResponseCode (IN inResponseCode CHARACTER, OUT outResponseCode CHARACTER)
BEGIN
	SET outResponseCode = CASE inResponseCode 
		WHEN '0' THEN '00' --Success
		WHEN '010' THEN '21' --Invalid amount 
		WHEN '3' THEN '22' -- From account is null
		WHEN '4' THEN '23' -- To account is null
		WHEN '9' THEN '24' -- To and From account are same
		WHEN '10' THEN '25' -- Invalid GUID
		WHEN '5560' THEN '26' -- GUID already exist
		WHEN '3007' THEN '27' -- Channel name or password verification failed.
		WHEN '1003' THEN '28' -- Invalid channel
		WHEN '5520' THEN '29'    -- Timeout
		WHEN '1' THEN '30'	-- System error 
	ELSE
		'50'
	END;
END;


CREATE FUNCTION getOMNIchannelCode(IN channelName CHARACTER) RETURNS CHARACTER
BEGIN
	DECLARE result ROW THE(SELECT channelInfo.CHANNEL_CODE FROM Database.CHANNEL_INFO AS channelInfo WHERE channelInfo.CHANNEL_NAME = channelName);
	DECLARE channelCode CHARACTER result.CHANNEL_CODE;
	RETURN channelCode;
END;