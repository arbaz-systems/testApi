BROKER SCHEMA com.systemsltd.ubl.accountmanagementservice

PATH com.systemsltd.common, com.systemsltd.ubl.cbs, com.systemsltd.ubl.common, 
com.systemsltd.ubl.common.config, com.systemsltd.ubl.common.database, com.systemsltd.ubl.caps;

CREATE FILTER MODULE ValidateAccountOpeningStatusRequest
	CREATE FUNCTION Main () RETURNS BOOLEAN
	BEGIN
		DECLARE transactionRef REFERENCE TO Environment.Variables.Transaction;
		DECLARE inMsgRef REFERENCE TO Root.JSON.Data;
		
		CREATE FIELD transactionRef.Error IDENTITY (JSON.Array);
		
		CALL validateServiceHeader(inMsgRef.serviceHeader, transactionRef);
		CALL validateTransactionInfo(inMsgRef.transactionInfo, transactionRef, 'CUSTOMER_ACCOUNT', 'STATUS');
		CALL validateCAPSRequestParams(inMsgRef, transactionRef);
		
		DECLARE cnicRef REFERENCE TO inMsgRef.[<].cnic;
		
		IF LASTMOVE(cnicRef) THEN
			IF LENGTH(inMsgRef.[<].cnic) < 13 OR (NOT checkStringValue(inMsgRef.[<].cnic)) OR isEmptyString(inMsgRef.[<].cnic) THEN
				CREATE LASTCHILD OF transactionRef.Error TYPE NameValue NAME 'Item' VALUE getValidationErrorMsg('cnic');
			END IF;
		END IF;
		
		RETURN EXISTS(transactionRef.Error.Item[]);
	END; 
END MODULE;


CREATE COMPUTE MODULE PrepareAccountOpeningStatusRequest
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE inputRef REFERENCE TO InputRoot.JSON.Data;
		
		CREATE FIELD OutputRoot.XMLNSC.CAPS_REQUEST;
		DECLARE capsReqRef REFERENCE TO OutputRoot.XMLNSC.CAPS_REQUEST;
		
		SET OutputRoot.Properties = InputProperties;
		
		SET capsReqRef.TRACKING_INQUERY.TRACKING_NO = inputRef.accountOpeningStatusRequest.trackingNo;
		
		CALL populateCAPSRequestParams(capsReqRef, inputRef);
		
		RETURN TRUE;
	END;	
END MODULE;


CREATE COMPUTE MODULE CallAccountOpeningStatus
	CREATE FUNCTION Main () RETURNS BOOLEAN
	BEGIN
		DECLARE serializedRequest, serializedResponse CHARACTER '';
		
		DECLARE transactionRef REFERENCE TO Environment.Variables.Transaction;		
		DECLARE capsSchemaName CHARACTER getCAPSSchemaName();
		
		SET OutputRoot.Properties = InputProperties;
		DECLARE capsReqRef REFERENCE TO InputRoot.XMLNSC.CAPS_REQUEST;
--		DECLARE spXMLRef REFERENCE TO capsReqRef.TRACKING_INQUERY;
		
		SET serializedRequest = serializeField(capsReqRef.TRACKING_INQUERY, InputProperties);
		
		DECLARE responseCode, responseDesc CHARACTER '';

		CALL CAPSWEBEX_TRANSINPUT_CALL(
			capsReqRef.TrackingNo,
		 	capsReqRef.STAN,
		 	capsReqRef.CNIC,
		 	capsReqRef.TRAN_CODE,
		 	capsReqRef.CHANNEL,
		 	serializedRequest,
		 	serializedResponse,
		 	responseCode,
		 	responseDesc) EXTERNAL SCHEMA capsSchemaName;
		
		DECLARE capsResponse BLOB 
		CAST(serializedResponse AS BLOB CCSID InputProperties.CodedCharSetId);
		
		CREATE LASTCHILD OF OutputRoot DOMAIN('XMLNSC')
		PARSE(capsResponse, InputProperties.Encoding, InputProperties.CodedCharSetId);
		
		DECLARE requestOut REFERENCE TO OutputRoot.XMLNSC.[<];
		
		IF capsTransactionSuccessfull(responseCode) THEN
			SET  transactionRef.HostResponse.ErrorCode = getSuccessResponseCode();
		ELSE
			CALL transformSyetemErrorIntoXml(requestOut, responseCode, responseDesc);
			PROPAGATE TO TERMINAL 1 DELETE NONE;
		END IF;
		
		RETURN TRUE;
	END; 
END MODULE;


CREATE COMPUTE MODULE PrepareAccountOpeningStatusResponse
	CREATE FUNCTION Main () RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.Properties = InputProperties;
		CREATE FIELD OutputRoot.JSON.Data;
		DECLARE capsRespRef REFERENCE TO OutputRoot.JSON.Data;
		DECLARE transactionRef REFERENCE TO Environment.Variables.Transaction;
		DECLARE requestOutRef REFERENCE TO InputRoot.XMLNSC.TRACKING_INQUERY;
		
		CALL copyAndConvertServiceHeader(transactionRef.Request.serviceHeader, capsRespRef);
		CALL copyAndConvertTransactionInfo(transactionRef.Request.transactionInfo, capsRespRef);
		
		CALL PopulateSuccessResponseHeader(capsRespRef, getTransactionStatusSuccess());
		
		IF transactionRef.HostResponse.ErrorCode <> getSuccessResponseCode() THEN
			SET capsRespRef.responseHeader.responseCode = transactionRef.HostResponse.ErrorCode;
			SET capsRespRef.responseHeader.responseDetails = transactionRef.HostResponse.Error;
		ELSE
			
			SET capsRespRef.accountOpeningStatusResponse.statusCode = requestOutRef.STATUS_CODE;
			SET capsRespRef.accountOpeningStatusResponse.statusDesc = requestOutRef.STATUS_DESC;
			SET capsRespRef.accountOpeningStatusResponse.discrepancy = requestOutRef.DISCREPANCY_DESC;
			
		END IF;
		
		RETURN TRUE;
	END; 
END MODULE;