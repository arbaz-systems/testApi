BROKER SCHEMA com.systemsltd.common.cache


CREATE COMPUTE MODULE ConfigCache_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.JSON.Data.ConfigCache.*[]);
		WHILE I < J DO
			--LOG EVENT VALUES('TESTING : ' ||InputRoot.JSON.Data.ConfigCache.*[I].NAME);
			CALL insertInCache('ConfigCache',InputRoot.JSON.Data.ConfigCache.*[I].NAME,InputRoot.JSON.Data.ConfigCache.*[I].VALUE);
			SET I = I + 1;
		END WHILE;
		
		LOG EVENT VALUES('ConfigCache updated: '|| CAST (J AS CHAR));

		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE CodeMappingCache_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.JSON.Data.CodeMappingCache.*[]);
		WHILE I < J DO
			--LOG EVENT VALUES('TESTING : ' ||InputRoot.JSON.Data.ConfigCache.*[I].NAME);
			CALL insertInCache('CodeMappingCache',InputRoot.JSON.Data.CodeMappingCache.*[I].NAME,InputRoot.JSON.Data.CodeMappingCache.*[I].VALUE);
			SET I = I + 1;
		END WHILE;
		
		LOG EVENT VALUES('CodeMappingCache updated: '|| CAST (J AS CHAR));

		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE RegionCache_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.JSON.Data.ConfigCache.*[]);
		WHILE I < J DO
			--LOG EVENT VALUES('TESTING : ' ||InputRoot.JSON.Data.ConfigCache.*[I].NAME);
			CALL insertInCache('ConfigCache',InputRoot.JSON.Data.ConfigCache.*[I].CODE,InputRoot.JSON.Data.ConfigCache.*[I].PREFIX);
			SET I = I + 1;
		END WHILE;
		
		LOG EVENT VALUES('RegionCache updated: '|| CAST (J AS CHAR));

		RETURN TRUE;
	END;
END MODULE; 